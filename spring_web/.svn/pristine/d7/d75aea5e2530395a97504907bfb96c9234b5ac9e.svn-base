<?xml version="1.0" encoding="UTF-8"?>

<web-app id="WebApp_ID" version="2.4" 
	xmlns="http://java.sun.com/xml/ns/j2ee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

  <display-name>Archetype Created Web Application</display-name>
  
  <!-- OpenSessionInView -->
  <filter>
  	<filter-name>opensessioninview</filter-name>
  	<filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
  </filter>
  <filter-mapping>
  	<filter-name>opensessioninview</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
  
  <!-- 配置多个spring配置文件；默认/WEB-INF/applicationContext.xml；可分散在不同的jar中，方式为classpath:service-context.xml; 个人认为在applicationContext.xml中引用并管理不同子配置更合适-->
  
  <servlet>
  	<servlet-name>dispatcher</servlet-name>
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  	<init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:dispatcher-servlet.xml</param-value>
    </init-param>
  	<load-on-startup>1</load-on-startup>
  </servlet>
  
  <listener>
  	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <context-param>
  	<!-- 默认/WEB-INF/[servlet名字]-servlet.xml加载上下文， 
	          如果配置了contextConfigLocation参数，
	          将使用/WEB-INF/dispatcher-servlet.xml加载上下文
    -->
  	<param-name>contextConfigLocation</param-name>
  	<param-value>
  		classpath:dispatcher-servlet.xml
  		classpath:spring-config.xml
  	</param-value>
  </context-param>
  
  <!-- 拦截匹配的请求，这里所有请求采用名字为dispatcher的DispatcherServlet处理 -->
  <servlet-mapping>
  	<servlet-name>dispatcher</servlet-name>
  	<url-pattern>/</url-pattern>
  </servlet-mapping>
  
  
  <!-- shiro过滤配置 -->
  <!-- The filter-name matches name of a 'shiroFilter' bean inside applicationContext.xml -->
  <filter>
  	<filter-name>shiroFilter</filter-name>
  	<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  	<init-param>
  		<param-name>targetFilterLifecycle</param-name>
  		<param-value>true</param-value>
  	</init-param>
  </filter>

	<!-- Make sure any request you want accessible to Shiro is filtered. /* catches all -->
	<!-- requests.  Usually this filter mapping is defined first (before all others) to -->
	<!-- ensure that Shiro works in subsequent filters in the filter chain:             -->
  <filter-mapping>
  	<filter-name>shiroFilter</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <!-- 字符过滤配置11 -->
  
  
  
  <!--log4j配置文件加载-->  
   <context-param>      
       <param-name>log4jConfigLocation</param-name>      
       <param-value>classpath:log4j.properties</param-value>      
   </context-param>  
   <!--启动一个watchdog线程每1800秒扫描一下log4j配置文件的变化-->  
   <context-param>      
       <param-name>log4jRefreshInterval</param-name>      
       <param-value>1800000</param-value>      
   </context-param>   
   <!--spring log4j监听器-->  
   <listener>      
       <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>      
   </listener>  
  
  
  
  <!-- 
  
  
  <init-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/dispatcher-servlet.xml</param-value>
    </init-param>
  
  
  
  
  
  
  
  
  

	 id="hello" version="2.4" 
	xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee"
	"http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
	
	
	  <context-param>
	  	<param-name>contextConfigLocation</param-name>
	  	<param-value>
		  	/WEB-INF/applicationContext.xml
		  	/
	  	</param-value>
	  </context-param>
	
	   
	  <listener>
	  	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	  </listener>
	  
	  
	
	
	<context-param>
	  	<param-name>contextConfigLocation</param-name>
	  	<param-value>/WEB-INF/dispatcher-servlet.xml</param-value>
	  </context-param>
	  
	   
	  
	  <filter>
	  	<filter-name>characterEncoding</filter-name>
	  	<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
	  	<init-param>
	  		<param-name>encoding</param-name>
	  		<param-value>UTF-8</param-value>
	  	</init-param>
	  	<init-param>
	  		<param-name>forceEncoding</param-name>
	  		<param-value>true</param-value>
	  	</init-param>
	  </filter>
	  <filter-mapping>
	  	<filter-name>characterEncoding</filter-name>
	  	<url-pattern>/*</url-pattern>
	  </filter-mapping>
  
 	-->

  
  
</web-app>
